

AND, DEC, DEX, DEY, EOR, INC, INX, INY, LDA, LDX, LDY,
ORA, PLA, TAX, TAY, TSX, TXA, TYA
    Z if 0
    N bit 7

ASL, LSR, ROL, ROR
    C if shift out
    Z if 0
    N bit 7

CMP, CPX, CPY
    C if not borrow
    Z if 0
    N bit 7

BIT
    Z if 0
    V bit 6 (of operand)
    N bit 7 (of operand)

ADC, SBC
    C if carry / not borrow
    Z if 0
    V if overflow
    N bit 7



BRK
    B 1

CLC, CLD, CLI, CLV, PLP, RTI, SEC, SED, SEI
    as indicated

Bugs while debugging
1. hadn't implemented cmp
2. missed the two LDX instruction exceptions
    (need to use Y addressing in a column that uses X)
3. order of operations in addrRel
    (must add rel offset to the PC after having fetch the rel)
4. confused IndIdx and IdxInd in creation of col4 opcodes
5. was setting addrRead in fetchPC, but we should use that only for data reads
6. confusion of using get/put idiom around something that modified state
    in push implementation
